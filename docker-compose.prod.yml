version: '3.8'
services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile.prod
    ports:
      - 3000:3000
    environment:
      NODE_ENV: production
    command: npm run start
    depends_on:
      mariadb:
        condition: service_healthy
    healthcheck:
      test: [ 'CMD', 'curl', '-f', 'http://localhost:3000' ]
      interval: 10s
      timeout: 10s
      retries: 50
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    ports:
      - 8080:3000
    command: npm run start
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: [ 'CMD', 'curl', '-f', 'http://localhost:3000' ]
      interval: 20s
      timeout: 20s
      retries: 20
    networks:
      - app-network

  mariadb:
    image: mariadb:10.6
    container_name: mariadb
    ports:
      - 3306:3306
    environment:
      - MARIADB_USER
      - MARIADB_PASSWORD
      - MARIADB_DATABASE
      - MARIADB_ALLOW_EMPTY_ROOT_PASSWORD=true
    restart: always
    healthcheck:
      test: [ 'CMD', 'mysqladmin', 'ping', '-h', 'localhost' ]
      timeout: 15s
      retries: 20
    networks:
      - app-network

  revproxy:
    build: ./nginx
    depends_on:
      api:
        condition: service_healthy
    networks:
      - app-network
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/conf/:/etc/nginx/conf.d/:ro
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw

networks:
  app-network: